:root {
  --shadow-color: #e9cac3;
  --primary: #460160;
  --primary-light: #865782;
  --primary-lighter:  #a582ab; /* Poss. better accessibility with: #ac87b2 */ 
  --primary-tint-25: #744088; /* Poss. better accessibility with: #613572 */
  --primary-tint-75: #d0bfd7;
  --primary-shadow: #bea5c0;
  --light: #f9f5ef;
  --secondary: #fbe1ce;
  --danger: #dc0f0f;
  --button-border-width: 0.125rem;

  
  --elevation-high: 0.375rem;
  --elevation: 0.25rem;
  --elevation-lowish: 0.1875rem;
  --elevation-low: 0.125rem;
  --elevation-lowest: 0.0625rem;

  --shadow-elevation__y: var(--elevation);
  --shadow-elevation__color: var(--shadow-color);
}


* {
  box-sizing: border-box;
  margin: 0;
}

time {
  font-variant-numeric: tabular-nums;
}

html {
  height: 100%;
}

body {
  height: 100%;
  display: flex;
  flex-direction: column;
  padding: 1.5rem;
  line-height: 1.5;
}

body > * {
  max-width: 35rem;
  width: 100%;
  margin: auto;
}

h1 {
  text-align: center;
  font-size: 1.5rem;
  line-height: 1.25;
}

a, a:visited {
  color: var(--primary-light);
}

a:hover {
  text-decoration: none;
}

a:active {
  color: var(--primary);
}

input {
  font: inherit;
}

input:invalid {
  box-shadow: none;
}

fieldset {
  border: 0;
  padding: 0;
}

legend {
  width: 100%;
  text-align: center;
  font-weight: bold;
  cursor: default;
}

input {
  font: inherit;
  border-top-left-radius: calc(6em / 16) 50%;
  border-top-right-radius: calc(6em / 16) 50%;
  border-bottom-left-radius: calc(6em / 16) 50%;
  border-bottom-right-radius: calc(6em / 16) 50%;
  border: solid 0.125rem;
  font-weight:bold;
  min-width: 0;
  padding: 0.5rem 1rem;
  font-variant-numeric: tabular-nums;
  background: white;
}

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  appearance: none;
  margin: 0; 
}

[type=number] {
  -moz-appearance: textfield;
}

button,
.button,
.button:visited {
  display: inline-block;
  font: inherit;
  appearance: none;
  border-top-left-radius: calc(6em / 16) 50%;
  border-top-right-radius: calc(6em / 16) 50%;
  border-bottom-left-radius: calc(6em / 16) 50%;
  border-bottom-right-radius: calc(6em / 16) 50%;
  border: solid var(--button-border-width) white;
  --button-background: var(--primary);
  background: var(--button-background);
  color: var(--light);
  padding: 0.5rem 1rem;
  font-weight: bold;
  text-transform: uppercase;
  box-shadow: 0 var(--shadow-elevation__y) var(--shadow-elevation__color);
  cursor: pointer;
  text-decoration: none;

  --original-elevation: var(--elevation);
  transition: 0.2s ease-in-out;
  transition-property: transform, box-shadow;
}

button:hover,
.button:hover {
  --shadow-elevation__y: var(--elevation-high);
  transform: translateY(calc(-1 * (var(--shadow-elevation__y) - var(--original-elevation))));
}

button:active,
.button:active {
  --shadow-elevation__y: var(--elevation-low);
  transform: none;
  transition: none;
}

.button--secondary,
.button--secondary:visited {
  background: var(--light);
  color: var(--primary);
  box-shadow: inset 0 0 0 var(--button-border-width) currentColor, 0 var(--shadow-elevation__y) var(--shadow-elevation__color);
}

.button--low {
  --shadow-elevation__y: var(--elevation-low);
  --original-elevation: var(--elevation-low);
}

.button--low:hover {
  --shadow-elevation__y: var(--elevation);
}

.button--low:active {
  --shadow-elevation__y: var(--elevation-lowest);
}

button:hover,
.button:hover {
  text-decoration: underline;
}

button:active,
.button:active {
  box-shadow: 0;
}

body {
  background: var(--secondary);
  color: var(--primary);
  font-family: sans-serif;
}

*:focus {
  /* Should contrast OK (3:1) with both primary and light */
  outline: solid 0.125rem var(--primary-light);
  outline-offset: 0.125rem;
}

*:focus:not(.focus-visible) {
  outline: none;
}

*:focus:not(:focus-visible) {
  outline: none;
}

/* Bootstrap's .sr-only */
.sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

.spaced > * + * {
  margin-top: 1.25rem;
}

.spaced-x > * + * {
  margin-left: 0.75rem;
}

.spaced--small > * + * {
  margin-top: 0.5rem;
}

.column > * {
  display: block;
  max-width: max-content;
  margin-left: auto;
  margin-right: auto;
}

.column--medium > * {
  max-width: 15rem;
}

.error {
  color: var(--danger);
  text-align: center;
}

.text-align--center {
  text-align: center;
}

.logo {
  text-align:center;
  font-size: 2rem;
  font-weight: bold;
}

.content {
  border-top-left-radius: 5% 50%;
  border-top-right-radius: 5% 50%;
  border-bottom-left-radius: 5% 50%;
  border-bottom-right-radius: 5% 50%;
  background: var(--light);
  box-shadow: 0 var(--shadow-elevation__y) var(--shadow-elevation__color);

  line-height: 1.6;

  padding: 2.25rem 2rem 4rem;
  position: relative;
  width: 100%;

  margin-bottom: 1.5rem;
}

.content--copy-last {
  padding-bottom: 3rem;
}

.content > * + * {
  margin-top: 1.5rem;
}

.content__action {
  margin: 0 auto;
  position: absolute;
  top: calc(100% - 1.25rem);
  left: 0;
  right: 0;
  max-width: none;
}

.content-actions {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin: -0.5rem -1rem;
}

.content-actions > * {
  margin: 0.25rem 0.5rem;
  min-width: 10ch;
}

.stepper {
  --stepper-border-width: 0.125rem;
  display: grid;
  grid-template-columns: auto 1fr auto;
  grid-gap: 0;
  border-top-left-radius: calc(6em / 16 + var(--stepper-border-width)) 50%;
  border-top-right-radius: calc(6em / 16 + var(--stepper-border-width)) 50%;
  border-bottom-left-radius: calc(6em / 16 + var(--stepper-border-width)) 50%;
  border-bottom-right-radius: calc(6em / 16 + var(--stepper-border-width)) 50%;
  --shadow-elevation__y: var(--elevation-low);
  box-shadow: 0 var(--shadow-elevation__y) var(--shadow-elevation__color);
  border: solid var(--stepper-border-width) white;
  overflow: hidden;
}

.stepper--error {
  border-color: var(--danger);
}

.stepper button {
  min-width: 3.25rem;
  position: relative;
  z-index: 0;
  box-shadow: none;
  transform: none;
  transition: none;
}

.stepper button:active {
  transform: translateY(0.0625rem);
  box-shadow: 0 -0.625rem var(--button-background);
}

.stepper .stepper__decrement {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: 0;
  border: 0;
}

.stepper .stepper__increment {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border:0;
}

.stepper input {
  border-radius: 0;
  border-left: 0;
  border-right: 0;
}

.stepper > :focus {
  z-index: 1;
}
.stepper > :focus-within {
  z-index: 1;
}

.stepper--contained {
  max-width: 14rem;
  margin-left: auto;
  margin-right: auto;
}

.clearable-input {
  display: inline-grid;
  grid-template-columns: 1fr auto;
  position: relative;
  z-index: 0;
  border: solid 2px;
  overflow: hidden;
}

.clearable-input > :focus {
  z-index: 1;
}

.clearable-input > * {
  grid-row: 1;
  width: auto;
  min-width: 0;
}

.clearable-input input {
  border: 0; /* The border is set on the wrapping span */
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  grid-column: 1/-1;  
}

.clearable-input button {
  border-left: 0;
  border-radius: 0;
  color: inherit;
  --button-background: white;
  box-shadow: none;
}

.timer {
  background:var(--primary-lighter);
  padding: 0.5rem 1rem;
  display: table;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
  font-weight: bold;
  border-radius: 0.25em;
  color: var(--primary);
  font-size: 3rem;
}

.content .timer {
  margin-bottom: 1rem;
}

.stack {
  display: grid;
  justify-items: center;
}

.stack-content {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.stack-content > .timer {
  margin: auto;
}

.stack > * {
  grid-area: 1/1;
  margin: 0;
}

.stack__overlay {
  --shadow-elevation__color: var(--primary-lighter);
  margin: 2rem;
  text-align: center;
  z-index: 0;
  width: 80%;
  background: var(--primary);
  color: white;
  border-top-left-radius: 5% 50%;
  border-top-right-radius: 5% 50%;
  border-bottom-left-radius: 5% 50%;
  border-bottom-right-radius: 5% 50%;
}

.visibility--hidden {
  visibility: hidden;
}

@supports(display: grid) {

  :root {
    --checkbox-width: 1.6em;
    --checkbox-height: 1.5em;
  }

  .checkbox > * {
    cursor: pointer;
  }

  .checkbox input {
    opacity: 0;
    position: absolute;
    transform: translateY(0.25em);
    width: var(--checkbox-width);
    height: var(--checkbox-height);
  }

  .checkbox label {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 0.65em;
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;

    --shadow-elevation__y: var(--elevation-low);
    --original-elevation: var(--elevation-low);
    --hover-transform: rotate(0);
    --transition: transform 0.1s ease-in-out;
  }

  .checkbox label::before,
  .checkbox label::after {
    grid-column: 1/1;
    grid-row: 1/1;
    align-self: center;
    justify-self: center;
  }

  .checkbox label::before {
    content: '';
    width: var(--checkbox-width);
    height: var(--checkbox-height);
    font-size: 0.8em;
    border-top-left-radius: 6px 50%;
    border-bottom-left-radius: 6px 50%;
    border-top-right-radius: 6px 50%;
    border-bottom-right-radius: 6px 50%;
    border: solid 0.125rem var(--primary);
    background: white;
    box-shadow: 0 var(--shadow-elevation__y) var(--shadow-elevation__color);
    transform: var(--hover-transform);
    transition: var(--transition);
    position: relative;
    top: -0.0625rem;
  }

  .checkbox label::after {
    content: '';
    /* position: absolute;
    top: calc(50% - 0.0625rem);
    left: 0.75em; */
    font-size: 0.8em;
    --tick-transform: translateY(-0.1875em) rotate(-45deg);
    transform: var(--hover-transform) var(--tick-transform);
    transition: var(--transition);
    border-bottom: solid 0.25em white;
    border-left: solid 0.25em white;
    border-bottom-left-radius: 0.125em;
    height: 0.375em;
    width: 0.75em;
    opacity: 0;
  }

  .checkbox :checked + label::before {
    background: var(--primary);
  }

  .checkbox :checked + label::after {
    opacity: 1;
  }

  .checkbox label:hover,
  .checkbox :hover + label {
    --shadow-elevation__y: var(--elevation-lowish);
    --hover-transform: translateY(calc(-1 * (var(--shadow-elevation__y) - var(--original-elevation))));
  }

  .checkbox :active + label {
    --shadow-elevation__y: var(--elevation-lowest);
    --hover-transform: translateY(calc(-1 * (var(--shadow-elevation__y) - var(--original-elevation))));
  }

  .checkbox :hover + label::before,
  .checkbox label:hover::before {
    background: var(--primary-tint-75);
  }

  .checkbox :hover + label::after,
  .checkbox label:hover::after {
    opacity: 0.25;
  }

  .checkbox :checked:hover + label::before,
  .checkbox :checked label:hover::before {
    background: var(--primary-tint-25);
  }

  .checkbox :checked:hover + label::after,
  .checkbox :checked label:hover::after {
    opacity: 0.75;
  }

  .checkbox :focus + label::before {
    outline: solid 0.125rem var(--primary-light);
    outline-offset: 0.125rem;
  }

  .checkbox :focus:not(:focus-visible) + label::before {
    outline: none;
  }

  .checkbox :focus:not(.focus-visible) + label::before {
    outline: none;
  }
}

.back-link-container {
  position: relative;
}

.back-link {
  position: absolute;
  bottom: 100%;
  left: 1.5rem;
  left: clamp(1rem, 5vw, 2rem);
  margin-bottom: 0.5rem;
}

.margin-after + * {
  margin-top: 1.25rem;
}

.title-with-side-lines{
  display: flex;
  width: 100%;
  text-align: center;
}

.title-with-side-lines > span {
  flex: none;
}

.title-with-side-lines::before,
.title-with-side-lines::after{
  content: '';
  display: block;
  width: 1%;
  flex: auto;
  background: linear-gradient(var(--shadow-color), var(--shadow-color));
  background-repeat: no-repeat;
  background-size: calc(100% - 1rem) 2px;
  background-position: 0 50%;
}

.title-with-side-lines::after {
  background-position: right 0 top 50%;
}

.mt--0 {
  margin-top: 0;
}
